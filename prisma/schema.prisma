datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id          Int                  @id @default(autoincrement())
    email       String               @unique
    username    String               @unique
    password    String
    messages    Message[]
    memberships ChatRoomMembership[]
    chatRooms   ChatRoom[]           @relation("UsersInChatRooms")
    createdAt   DateTime             @default(now())
    updatedAt   DateTime             @updatedAt
}

model ChatRoom {
    id          Int                  @id @default(autoincrement()) // Use ID as the primary key
    name        String               @unique // Keep name unique for easy lookups
    users       User[]               @relation("UsersInChatRooms")
    messages    Message[]
    memberships ChatRoomMembership[]
    createdAt   DateTime             @default(now())
}

model Message {
    id         Int      @id @default(autoincrement())
    content    String
    user       User     @relation(fields: [userId], references: [id])
    userId     Int
    chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id]) // Use chatRoomId instead of name
    chatRoomId Int // Use an integer reference to ChatRoom ID
    createdAt  DateTime @default(now())
}

model ChatRoomMembership {
    id         Int      @id @default(autoincrement())
    chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
    chatRoomId Int
    user       User     @relation(fields: [userId], references: [id])
    userId     Int
    createdAt  DateTime @default(now())

    @@unique([chatRoomId, userId]) // Ensure no duplicate memberships
}
